[user]
    name = Hiroshi Muraoka
    email = h.muraoka714@gmail.com

[alias]
    main-branch = !gh repo view --json defaultBranchRef --jq .defaultBranchRef.name
    current-branch = rev-parse --abbrev-ref HEAD
    commit-hash = rev-parse

    amend = commit --amend
    a = add
    u = add -u
    bd = branch -D
    ci = commit -sS
    co = checkout HEAD
    cl = checkout HEAD
    cm = commit -sS -m
    d = diff
    ds = diff --staged
    e = !nvim ~/.gitconfig
    empty = commit --allow-empty -sS -m "empty"
    f = fetch
    fo = fetch origin
    fd = !fd
    g = !git grep -n
    gg = grep -n
    h = show
    hard = reset --hard
    l = log --graph --decorate --abbrev-commit --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
    o = open
    op = stash pop
    po = push
    pf = push --force-with-lease
    pi = !git pull origin $(git rev-parse --abbrev-ref HEAD)
    pk = cherry-pick
    pr = !git push && gh pr create -a tapih -d
    prr = !git push && gh pr create -a tapih
    rb = rebase
    ra = rebase --abort
    rc = rebase --continue
    mg = merge
    ma = merge --abort
    mc = merge --continue
    v = !gh pr view --web
    vv = !gh browse -b $(git current-branch)
    vm = !gh browse
    s = status -s
    ss = status
    ts = stash
    w = switch
    c = switch -c
    cl = clean -fd

    # open issue
    I = !gh issue list --search 'involves:@me' -L 100 | fzf --height 90% --preview 'gh issue view {+1}' | awk '{print $1}' | xargs gh issue view --web

    # open PR
    P = "!f() { gh pr list --search 'involves:@me' -L 100 --json number,headRefName,title,updatedAt --template '{{range .}}{{tablerow (printf \"#%v\" .number | autocolor \"green\") .headRefName .title (timeago .updatedAt)}}{{end}}' | fzf --height 90% --preview 'gh pr diff --color=always {+1}' | awk '{print $1}' | xargs gh pr view --web; };f"

    # switch branch
    b = "!f() { gh pr list --search 'involves:@me' -L 100 --json number,headRefName,title,updatedAt --template '{{range .}}{{tablerow (printf \"#%v\" .number | autocolor \"green\") .headRefName .title (timeago .updatedAt)}}{{end}}' | fzf --height 90% --preview 'gh pr diff --color=always {+1}' | awk '{print $2}' | xargs git switch; }; f"

    ours = checkout --ours
    theirs = checkout --theirs

    m = "!f(){ git checkout $(git main-branch) $@;}; f"
    mr = "!f(){ git pull --rebase --autostash origin $(git main-branch) $@;}; f"

    lprune = "!f(){ B=$(git main-branch); git switch ${B}; git branch --format='%(refname:short)' --merged=${B} | grep -v \"^${B}$\" | xargs -n 1 git branch -D; }; f"
    rprune = fetch --prune

[init]
    defaultBranch = main

[core]
    editor = vim
    autocrlf= false
    sparseCheckout = true
    pager = delta
    diff = delta
    log = delta
    reflog = delta
    show = delta

[delta]
    width = variable
    true-color = always
    dark = true
    light = false
    features = line-numbers decorations
    syntax-theme = Monokai Extended
    navigate = true
    line-numbers = true
    side-by-side = false
    wrap = true

[pull]
    ff = only
    rebase = false

[push]
    default = current
    autoSetupRemote = true

[include]
    path = ~/.gitconfig.local

[diff]
    tool = vimdiff

[difftool]
    prompt = false

[merge]
    ff = false

[log]
    date = iso

[ghq]
    root=~/.ghq
    root=~/src

[url "https://"]
    insteadOf = git://

[url "ssh://git@github.com/"]
    insteadOf = https://github.com/

[rebase]
	autostash = true
	abbreviateCommands = true
	autosquash = true
[credential "https://github.com"]
	helper = 
	helper = !/home/linuxbrew/.linuxbrew/bin/gh auth git-credential
[credential "https://gist.github.com"]
	helper = 
	helper = !/home/linuxbrew/.linuxbrew/bin/gh auth git-credential
