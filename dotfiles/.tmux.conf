if-shell "uname | grep -q Darwin" \
  'set-option -g default-command "reattach-to-user-namespace -l zsh"'

# ステータスバーをトップに配置する
set-option -g status-position top

# スクロール可能なヒストリサイズ
set -g history-limit 50000

# prefixキーをC-tに変更する
set -g prefix C-t

# C-bのキーバインドを解除する
unbind C-b

# キーストロークのディレイを減らす
set -sg escape-time 1
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# 今開いているウィンドウと同じパスで開く
bind c new-window -c '#{pane_current_path}'

# ペインを横に分割する
bind - split-window -v -c "#{pane_current_path}" \; select-layout even-vertical

# ペインを縦に分割する
bind \\ split-window -h
bind \\ split-window -h -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}" \; select-layout even-horizontal

# / でペインを消す
bind / kill-pane

# paneにnumberを表示
bind-key C-t display-panes

# select-layout horizontal
bind-key = select-layout even-vertical
bind-key + select-layout even-horizontal

# paste
unbind \;
bind \; paste

# synchronize pane
bind a \
  if-shell "tmux show-window-options synchronize-panes | grep off" \
    "setw synchronize-panes on" \
    "setw synchronize-panes off" \;\
    display "synchronize-panes #{?pane_synchronized,on,off}"

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
unbind C-l

# Vimのーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# マウス操作を有効にする
setw -g mouse on

# 256色端末を使用する
set -g default-terminal "screen-256color"
set -g terminal-overrides "xterm:colors=256"

# # ステータスバーの色を設定する
set -g status-fg white
set -g status-bg black

# ウィンドウリストの色を設定する
setw -g window-status-style fg="white",bg="default","dim"

# アクティブなウィンドウを目立たせる
setw -g window-status-current-style fg="black",bg="white"

# ペインボーダーの色を設定する
setw -g pane-border-style fg="white",bg="black"

# # アクティブなペインを目立たせる
set -g pane-active-border-style fg="cyan",bg="black"
# ステータスバーを設定する
## 左パネルを設定する
set -g status-left-length 40

# vim <-> tmux clipboard
set -g focus-events on

# コピーモードを設定する
## viのキーバインドを使用する
setw -g mode-keys vi

if-shell "uname | grep -q Darwin" \
  'bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xsel -pi && xsel -po | xsel -bi"' \
  'bind -T copy-mode-vi Enter copy-pipe "reattach-to-user-namespace pbcopy"'
if-shell "uname | grep -q Darwin" \
  'bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xsel -pi && xsel -po | xsel -bi"' \
  'bind -T copy-mode-vi y copy-pipe "reattach-to-user-namespace pbcopy"'
bind -T copy-mode-vi v     send -X begin-selection
bind -T copy-mode-vi w     send -X next-word-end
bind -T copy-mode-vi C-y   send -X rectangle-toggle \; send -X begin-selection
bind -T copy-mode-vi C-v   send -X rectangle-toggle \; send -X begin-selection
bind -T copy-mode-vi C-[   send -X cancel

# tmux plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copy-cat'
set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'

# status line
set-option -g status on
set-option -g status-interval 1
# set-option -g status-utf8 on
set-option -g status-justify "left"
set-option -g status-bg "colour238"
set-option -g status-fg "colour255"

set-option -g status-left-length 50
set-option -g status-left " #[fg=green]%D %H:%M:%S#[default] | #[fg=yellow]#S #[default]"
set-option -g status-right-length 85
set-option -g status-right "#{sysstat_cpu} | #{sysstat_mem} | LA:#[fg=green]#{sysstat_loadavg}"

set-window-option -g window-status-format " #I: #W "
set-window-option -g window-status-current-format "#[fg=colour241,bg=colour255,bold] #I: #W #[default]"

set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-save-interval '10'
set -g @continuum-restore 'on'

run -b '~/.tmux/plugins/tpm/tpm'
